version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: automa-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/data:/app/data
      - ./backend/scripts:/app/scripts
      # Use Docker-in-Docker instead of socket exposure for production
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - DATABASE_URL=${DATABASE_URL:-sqlite+aiosqlite:///./data/automa.db}
      - SECRET_KEY=${SECRET_KEY}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - SANDBOX_IMAGE=${SANDBOX_IMAGE:-automa-sandbox:latest}
      - SANDBOX_MEMORY_LIMIT=${SANDBOX_MEMORY_LIMIT:-256m}
      - SANDBOX_CPU_LIMIT=${SANDBOX_CPU_LIMIT:-0.5}
      - SANDBOX_TIMEOUT=${SANDBOX_TIMEOUT:-300}
      - DOCKER_HOST=tcp://docker-proxy:2375
    networks:
      - automa-network
    depends_on:
      - docker-proxy
      - sandbox-builder

  # Docker socket proxy for security
  docker-proxy:
    image: tecnativa/docker-socket-proxy:latest
    container_name: automa-docker-proxy
    environment:
      - CONTAINERS=1
      - IMAGES=1
      - AUTH=0
      - SECRETS=0
      - POST=1
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - DISTRIBUTION=0
      - EXEC=0
      - GRPC=0
      - INFO=0
      - NETWORKS=0
      - NODES=0
      - PLUGINS=0
      - SERVICES=0
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - TASKS=0
      - VERSION=0
      - VOLUMES=0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - automa-network
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: automa-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - automa-network

  sandbox-builder:
    build:
      context: .
      dockerfile: docker/Dockerfile.sandbox
    image: automa-sandbox:latest
    container_name: automa-sandbox-builder
    command: "echo 'Sandbox image built'"
    networks:
      - automa-network

networks:
  automa-network:
    driver: bridge

volumes:
  automa-data: